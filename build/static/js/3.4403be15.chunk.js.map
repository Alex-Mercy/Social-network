{"version":3,"sources":["components/hoc/withAuthRedirect.jsx","components/Profile/MyPosts.jsx/MyPosts.module.css","components/Profile/MyPosts.jsx/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts.jsx/Post/Post.jsx","components/Profile/MyPosts.jsx/MyPosts.jsx","components/Profile/MyPosts.jsx/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","styles","post","post__image","src","message","likesCount","maxLength10","maxLengthCreator","Myposts","memo","console","log","postElements","posts","map","p","id","postsBlock","AddNewPostReduxForm","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","name","component","Textarea","validate","required","addPostButton","MypostsContainer","profilePage","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateUserStatus","ProfileInfo","profile","descriptionBlock","photos","large","userPhoto","Preloader","Profile","ProfileContainer","userId","match","params","authorizedUserId","getUserProfile","getUserStatus","compose","useMatch"],"mappings":"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","file":"static/js/3.4403be15.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to=\"/login\"/>\r\n            return <Component {...this.props}  />  \r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__15SSU\",\"postsBlock\":\"MyPosts_postsBlock__33QRy\",\"addPostButton\":\"MyPosts_addPostButton__3Xzba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__10zBd\",\"post__image\":\"Post_post__image__2FWUb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content__image\":\"ProfileInfo_content__image__2DD_9\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__dJSsw\",\"userPhoto\":\"ProfileInfo_userPhoto__DQiZQ\"};","import React from \"react\";\r\nimport styles from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={styles.post}>\r\n            <img className={styles.post__image} src='https://dogcatdog.ru/wp-content/uploads/d/0/d/d0d201a4f4d30eefedb66ad6b047ca16.jpg' />\r\n            {props.message}\r\n            <div>likes: {props.likesCount}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Post;","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../validators/validator\";\r\nimport styles from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst Myposts = React.memo(props => {\r\n    console.log(\"render\");\r\n\r\n    let postElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id} />);\r\n\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddNewPostReduxForm onSubmit={addNewPost} />\r\n            </div>\r\n            <div>\r\n                {postElements}\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nconst AddNewPost = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" component={Textarea}\r\n                    validate={[required, maxLength10]}\r\n                />\r\n            </div>\r\n            <button className={styles.addPostButton}>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({ form: 'AddNewPostForm' })(AddNewPost);\r\n\r\nexport default Myposts;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPost } from '../../../redux/profileReducer'\r\nimport Myposts from \"./MyPosts\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\n\r\nconst MypostsContainer = connect(mapStateToProps, { addPost })(Myposts)\r\n\r\nexport default MypostsContainer;","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    \r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n  \r\n    const activateEditMode = () => {\r\n      setEditMode(true);\r\n        }\r\n        \r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n            setStatus(e.currentTarget.value)\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={activateEditMode} >{props.status || \"-----\"}</span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange} autoFocus={true} \r\n                        onBlur={deActivateEditMode} value={status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport userPhoto from '../../../assets/images/user.jpg'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            {/* <div>\r\n                <img className={styles.content__image} src='https://s1.1zoom.me/big3/984/Canada_Parks_Lake_Mountains_Forests_Scenery_Rocky_567540_3840x2400.jpg'></img>\r\n            </div> */}\r\n            <div className={styles.descriptionBlock}>\r\n                {props.profile.photos.large ?<img src={props.profile.photos.large}/> \r\n                : <img className={styles.userPhoto} src={userPhoto}  />}\r\n\r\n                <ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n                <div>Description</div>\r\n                \r\n\r\n                {/* <img src={props.profile.photos.large}  /> */}\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport MypostsContainer from \"./MyPosts.jsx/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} \r\n                updateUserStatus={props.updateUserStatus}/>\r\n            <MypostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile, getUserStatus, updateUserStatus } from \"../../redux/profileReducer\";\r\nimport {  useMatch } from \"react-router-dom\";\r\nimport { WithAuthRedirect } from \"../hoc/withAuthRedirect\";\r\n\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match ? this.props.match.params.userId : this.props.authorizedUserId;\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst ProfileMatch = (props) => {\r\n\tlet match = useMatch(\"/profile/:userId/\");\r\n\treturn (\r\n\t\t<ProfileContainer {...props} match={match} />\r\n\t)\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\nprofile: state.profilePage.profile,\r\nstatus: state.profilePage.status,\r\nauthorizedUserId: state.auth.id,\r\nisAuth: state.isAuth\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\r\n    WithAuthRedirect\r\n)(ProfileMatch)"],"sourceRoot":""}