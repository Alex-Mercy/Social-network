{"version":3,"sources":["components/hoc/withAuthRedirect.jsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts.jsx/MyPosts.module.css","components/Profile/MyPosts.jsx/Post/Post.module.css","components/Profile/MyPosts.jsx/Post/Post.jsx","components/Profile/MyPosts.jsx/MyPosts.jsx","components/Profile/MyPosts.jsx/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","styles","post","post__image","src","message","likesCount","maxLength10","maxLengthCreator","Myposts","memo","postElements","posts","map","p","id","postsBlock","AddNewPostReduxForm","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","name","component","Textarea","validate","required","addPostButton","MypostsContainer","profilePage","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateUserStatus","ProfileDataFormReduxForm","profile","error","formSummaryError","placeholder","Input","type","Object","keys","contacts","key","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","photos","large","userPhoto","target","files","length","initialValues","formData","then","Profile","ProfileContainer","userId","match","params","authorizedUserId","getUserProfile","getUserStatus","refreshProfile","prevProps","compose","useMatch"],"mappings":"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","file":"static/js/3.6883eb05.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to=\"/login\"/>\r\n            return <Component {...this.props}  />  \r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__dJSsw\",\"userPhoto\":\"ProfileInfo_userPhoto__DQiZQ\",\"contacts\":\"ProfileInfo_contacts__1z5yC\",\"formSummaryError\":\"ProfileInfo_formSummaryError__2Bdb5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__15SSU\",\"postsBlock\":\"MyPosts_postsBlock__33QRy\",\"addPostButton\":\"MyPosts_addPostButton__3Xzba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__10zBd\",\"post__image\":\"Post_post__image__2FWUb\"};","import React from \"react\";\r\nimport styles from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={styles.post}>\r\n            <img className={styles.post__image} src='https://dogcatdog.ru/wp-content/uploads/d/0/d/d0d201a4f4d30eefedb66ad6b047ca16.jpg' />\r\n            {props.message}\r\n            <div>likes: {props.likesCount}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Post;","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../validators/validator\";\r\nimport styles from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst Myposts = React.memo(props => {\r\n    let postElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id} />);\r\n\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddNewPostReduxForm onSubmit={addNewPost} />\r\n            </div>\r\n            <div>\r\n                {postElements}\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nconst AddNewPost = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" component={Textarea}\r\n                    validate={[required, maxLength10]}\r\n                />\r\n            </div>\r\n            <button className={styles.addPostButton}>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({ form: 'AddNewPostForm' })(AddNewPost);\r\n\r\nexport default Myposts;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPost } from '../../../redux/profileReducer'\r\nimport Myposts from \"./MyPosts\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\n\r\nconst MypostsContainer = connect(mapStateToProps, { addPost })(Myposts)\r\n\r\nexport default MypostsContainer;","import React, { useEffect, useState } from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    \r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n  \r\n    const activateEditMode = () => {\r\n      setEditMode(true);\r\n        }\r\n        \r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n            setStatus(e.currentTarget.value)\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                    <div>\r\n                        <b>Status:</b> <span onDoubleClick={activateEditMode} >{props.status || \"-----\"}</span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange} autoFocus={true} \r\n                        onBlur={deActivateEditMode} value={status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React, { useState } from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport userPhoto from '../../../assets/images/user.jpg'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Input, Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n            { error && <div className={styles.formSummaryError} >{error}</div>}\r\n                <button>Save</button>\r\n                <div>\r\n                <b>Full name</b>\r\n                <Field name=\"fullName\" placeholder=\"Full name\" component={Input} ></Field>\r\n                </div>\r\n                <div>\r\n                <b>Looking for a job</b> \r\n                <Field component={Input} name=\"lookingForAJob\" type=\"checkbox\" />\r\n                 </div>\r\n                 <b>My professioanl slills</b>\r\n                 <Field name=\"lookingForAJobDescription\" placeholder=\"My professioanl slills\" \r\n                 component={Textarea} ></Field>\r\n                <b>About me</b>: \r\n                <Field name=\"aboutMe\" placeholder=\"About me\"  component={Textarea} ></Field>\r\n\r\n                <div >\r\n                    <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                        return <div key={key} className={styles.contacts}>\r\n                        <b>{key}</b> <Field name= {\"contacts.\" + key} placeholder={ key}  component={Input} ></Field>\r\n                        </div>\r\n                    })}\r\n                </div>\r\n\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'ProfileDataForm' })(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, { useState } from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport userPhoto from '../../../assets/images/user.jpg'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateUserStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const selectedNewAvatar = (e) => {\r\n        if (e.target.files.length) {\r\n        savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then (\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        )\r\n       \r\n        \r\n    }\r\n\r\n    return (\r\n        <div className={styles.descriptionBlock}>\r\n            {profile.photos.large ? <img src={profile.photos.large} />\r\n                : <img className={styles.userPhoto} src={userPhoto} />}\r\n            {isOwner && <input type={\"file\"} onChange={selectedNewAvatar} />}\r\n            {editMode ? \r\n            <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n            : <ProfileData profile={profile} isOwner={isOwner}\r\n            goToEditMode = {() => {setEditMode(true)}} /> }\r\n            <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                {isOwner && <div><button onClick={goToEditMode} >Edit</button></div>}\r\n                <div><b>Full name</b>: {profile.fullName}</div>\r\n                <div>\r\n                    <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n                </div>\r\n                {profile.lookingForAJob && <div>\r\n                    <b>My professioanl slills</b>: {profile.lookingForAJobDescription}\r\n                </div>}\r\n                <div>\r\n                    <b>About me</b>: {profile.aboutMe}\r\n                </div>\r\n                \r\n                <div>\r\n                    <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                        return <div className={styles.contacts}>\r\n                        <Contact key={key} contactTitle={key}\r\n                            contactValue={profile.contacts[key]} />\r\n                            </div>\r\n                    })}\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div><b>{contactTitle}: </b>{contactValue}</div>\r\n}\r\n\r\n\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport MypostsContainer from \"./MyPosts.jsx/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} \r\n                updateUserStatus={props.updateUserStatus} saveProfile={props.saveProfile}\r\n                isOwner = {props.isOwner} savePhoto={props.savePhoto} />\r\n            <MypostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile, getUserStatus, updateUserStatus, \r\n    savePhoto, saveProfile } from \"../../redux/profileReducer\";\r\nimport {  useMatch } from \"react-router-dom\";\r\nimport { WithAuthRedirect } from \"../hoc/withAuthRedirect\";\r\n\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match ? this.props.match.params.userId : this.props.authorizedUserId;\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match != prevProps.match) {\r\n            this.refreshProfile(); \r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} isOwner = {!this.props.match}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst ProfileMatch = (props) => {\r\n\tlet match = useMatch(\"/profile/:userId/\");\r\n\treturn (\r\n\t\t<ProfileContainer {...props} match={match} />\r\n\t)\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\nprofile: state.profilePage.profile,\r\nstatus: state.profilePage.status,\r\nauthorizedUserId: state.auth.id,\r\nisAuth: state.isAuth\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile}),\r\n    WithAuthRedirect\r\n)(ProfileMatch)"],"sourceRoot":""}